# This test contains keyring file created on 64bit which is not
# portable
--source include/have_64bit.inc
--source include/no_valgrind_without_big.inc
--source include/have_util_unzip.inc
--source include/have_debug.inc

--disable_query_log
call mtr.add_suppression("Resizing redo log from");
call mtr.add_suppression("Upgrading redo log");
call mtr.add_suppression("Starting to delete and rewrite log files");
call mtr.add_suppression("New log files created");
call mtr.add_suppression("Unknown system variable 'show_compatibility_56'");
call mtr.add_suppression("You need to use --log-bin to make --binlog-format work");
call mtr.add_suppression("Creating routine without parsing routine body");
call mtr.add_suppression("Resolving dependency for the view");
call mtr.add_suppression("references invalid");
call mtr.add_suppression("doesn't exist");
call mtr.add_suppression("information_schema");
call mtr.add_suppression("Storage engine '.*' does not support system tables. \\[mysql.*\\]");
call mtr.add_suppression("Table 'mysql.component' doesn't exist");
call mtr.add_suppression("is expected to be transactional");
call mtr.add_suppression("table is missing or has an incorrect definition");
call mtr.add_suppression("ACL DDLs will not work unless mysql_upgrade is executed");
call mtr.add_suppression("Native table .* has the wrong structure");
call mtr.add_suppression("Column count of mysql.* is wrong");
call mtr.add_suppression("Cannot open table mysql/version from the internal data dictionary of InnoDB though the .frm file for the table exists");
call mtr.add_suppression("Column count of performance_schema.events_statements_summary_by_digest is wrong");
call mtr.add_suppression("The privilege system failed to initialize correctly");
call mtr.add_suppression("Missing system table mysql.global_grants");
# InnoDB reports "Lock wait timeout" warnings when it tries to drop persistent
# statistics while persistent statistics table is altered during upgrade.
# This issue doesn't seem to cause any further trouble (as there is no persistent
# stats for persistent stats table anyway), so we ignore these warnings here.
call mtr.add_suppression("Unable to delete statistics for table mysql.");
# new fields were added to these tables
call mtr.add_suppression("Column count of performance_schema.replication_group_members is wrong. Expected 7, found 5");
call mtr.add_suppression("Column count of performance_schema.replication_group_member_stats is wrong. Expected 13, found 9");
call mtr.add_suppression("Column count of performance_schema.threads is wrong. Expected 18, found 17");
call mtr.add_suppression("ACL table mysql.[a-zA-Z_]* missing. Some operations may fail.");
call mtr.add_suppression("Info table is not ready to be used. Table 'mysql.slave_master_info' cannot be opened");
call mtr.add_suppression("Error in checking mysql.slave_master_info repository info type of TABLE");
call mtr.add_suppression("Error creating master info: Error checking repositories.");
call mtr.add_suppression("Slave: Failed to initialize the master info structure for channel");
call mtr.add_suppression("Failed to create or recover replication info repositories.");
call mtr.add_suppression("db.opt file not found for test database. Using default Character set");
call mtr.add_suppression("Skip re-populating collations and character sets tables in InnoDB read-only mode");
call mtr.add_suppression("Skipped updating resource group metadata in InnoDB read only mode");
call mtr.add_suppression("file './test/t1.ibd' is missing!");
# The rotation of std_data/data_8017_crypt_v1 was not fully completed when preparing this data dir for test.
# Thus we need to ignore these warnings.
call mtr.add_suppression("Table encryption flag is OFF in the data dictionary but the encryption flag in file ./test/t3.ibd is ON.");
call mtr.add_suppression("Table encryption flag is OFF in the data dictionary but the encryption flag in file ./test/t6.ibd is ON.");
--enable_query_log

--echo # Set different paths for --datadir
let $MYSQLD_DATADIR1 = $MYSQL_TMP_DIR/data_8016_crypt_v1/data;

--copy_file $MYSQLTEST_VARDIR/std_data/data_8016_crypt_v1.zip $MYSQL_TMP_DIR/data_8016_crypt_v1.zip

--echo # Check that the file exists in the working folder.
--file_exists $MYSQL_TMP_DIR/data_8016_crypt_v1.zip

--echo # Unzip the zip file.
--exec unzip -qo $MYSQL_TMP_DIR/data_8016_crypt_v1.zip -d $MYSQL_TMP_DIR

--let $MYSQLD_DATADIR=`SELECT @@datadir`

--echo # Stop DB server which was created by MTR default
--source include/shutdown_mysqld.inc

let $MYSQLD_LOG= $MYSQLTEST_VARDIR/log/update_crypt_data_v1.log;

--echo # Restart the server on 8.0.16 directory with tables with crypt data v1. The tables were created as:
--echo # CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENCRYPTION='Y';
--echo # CREATE TABLE t2 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENCRYPTION='KEYRING';
--echo # CREATE TABLE t3 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255));
--echo # CREATE TABLE t4 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENCRYPTION_KEY_ID=4;
--echo # CREATE TABLE t5 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENCRYPTION='N';
--echo # CREATE TABLE t6 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENCRYPTION_KEY_ID=4;
--echo # Table t1 is the only table because of which the upgrade is not possible. This is because it is only partially re-encrypted
--echo # from master key encryption to online keyring encryption.

--error 1
--exec $MYSQLD_CMD --log-error=$MYSQLD_LOG --loose-skip-log-bin --skip-log-slave-updates --datadir=$MYSQLD_DATADIR1 --keyring_file_data=$MYSQL_TMP_DIR/data_8016_crypt_v1/mysecret_keyring $KEYRING_PLUGIN_OPT $KEYRING_PLUGIN_EARLY_LOAD

--let ABORT_ON=NOT_FOUND
--let SEARCH_FILE=$MYSQLD_LOG
--let SEARCH_PATTERN=Upgrade is not possible as there are tables for which re-encryption from master key encryption to online keyring encryption was not finished\. Please either finish off the re-encryption or decrypt the tables\. This feature is experimental in the version you are upgrading from\.
--source include/search_pattern_in_file.inc

--echo # Remove the problematic tablespace and re-try the upgrade. It should pass.
--remove_file $MYSQLD_DATADIR1/test/t1.ibd

--echo # Start the 8.0.18 server on 8.0.16 datadir
--let $restart_parameters = "restart: --loose-skip-log-bin --skip-log-slave-updates --datadir=$MYSQLD_DATADIR1 --keyring_file_data=$MYSQL_TMP_DIR/data_8016_crypt_v1/mysecret_keyring $KEYRING_PLUGIN_OPT $KEYRING_PLUGIN_EARLY_LOAD"
--replace_result $MYSQLD_DATADIR1 MYSQLD_DATADIR1 $MYSQL_TMP_DIR MYSQL_TMP_DIR $KEYRING_PLUGIN_OPT KEYRING_PLUGIN_OPT $KEYRING_PLUGIN_EARLY_LOAD KEYRING_PLUGIN_EARLY_LOAD
--source include/start_mysqld.inc

--let tables_count=`select count(*) from INFORMATION_SCHEMA.INNODB_TABLESPACES`

SET GLOBAL innodb_encryption_threads = 4;
SET GLOBAL default_table_encryption=ONLINE_TO_KEYRING;

--echo # Wait max 10 min for key encryption threads to encrypt all spaces
--let $wait_timeout= 600
# All tables should get encrypted. tables_count - 3 because temporary tablespace, t5 are not encrypted and t1 is missing, because we have
# deleted it.
--let $wait_condition=SELECT COUNT(*) = $tables_count - 3 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1
--source include/wait_condition.inc

SELECT COUNT(*) FROM t2;
SELECT COUNT(*) FROM t3;
SELECT COUNT(*) FROM t4;
SELECT COUNT(*) FROM t5;
SELECT COUNT(*) FROM t6;

# Check if server restarts correctly
--replace_result $MYSQLD_DATADIR1 MYSQLD_DATADIR1 $MYSQL_TMP_DIR MYSQL_TMP_DIR $KEYRING_PLUGIN_OPT KEYRING_PLUGIN_OPT $KEYRING_PLUGIN_EARLY_LOAD KEYRING_PLUGIN_EARLY_LOAD
--source include/restart_mysqld.inc

--source include/shutdown_mysqld.inc

--echo # Remove copied files
--remove_file $MYSQL_TMP_DIR/data_8016_crypt_v1.zip
--force-rmdir $MYSQL_TMP_DIR/data_8016_crypt_v1

--echo # Restart the server with default options.
--let $restart_parameters=
--source include/start_mysqld.inc
