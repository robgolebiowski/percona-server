--source include/have_innodb.inc
#-- source include/have_example_key_management_plugin.inc
--source include/not_valgrind.inc
--source include/not_embedded.inc

let MYSQLD_DATADIR = `SELECT @@datadir`;

--let $id = `SELECT RAND()`
--let t1_IBD = $MYSQLD_DATADIR/test/t1.ibd
--let t2_IBD = $MYSQLD_DATADIR/test/t2.ibd
--let t3_IBD = $MYSQLD_DATADIR/test/t3.ibd
--let t4_IBD = $MYSQLD_DATADIR/test/t4.ibd
--let t5_IBD = $MYSQLD_DATADIR/test/t5.ibd
--let t6_IBD = $MYSQLD_DATADIR/test/t6.ibd
--let t7_IBD = $MYSQLD_DATADIR/test/t7.ibd
--let t8_IBD = $MYSQLD_DATADIR/test/t8.ibd

CREATE TABLESPACE ts_valid2 ADD DATAFILE 'ts_valid2.ibd' ENCRYPTION='ROTATED_KEYS';


CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB encryption='ROTATED_KEYS';
CREATE TABLE t2 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ENCRYPTION='Y';
CREATE TABLE t3 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB COMPRESSION="zlib" encryption='ROTATED_KEYS';
CREATE TABLE t4 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB COMPRESSION="zlib";
CREATE TABLE t5 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB row_format=compressed encryption='ROTATED_KEYS';
CREATE TABLE t6 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB row_format=compressed;
CREATE TABLE t7 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ENCRYPTION='N';
CREATE TABLE t8 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB;

delimiter //;
create procedure innodb_insert_proc (repeat_count int)
begin
  declare current_num int;
  set current_num = 0;
  while current_num < repeat_count do
    insert into t1 values (current_num,repeat('foobar',42));
    insert into t2 values (current_num,repeat('temp', 42));
    insert into t3 values (current_num,repeat('barfoo',42));
    insert into t4 values (current_num,repeat('secret',42));
    insert into t5 values (current_num,repeat('fbar',42));
    insert into t6 values (current_num,repeat('barf',42));
    insert into t7 values (current_num,repeat('barb',42));
    insert into t8 values (current_num,repeat('baba',42));
    set current_num = current_num + 1;
  end while;
end//
delimiter ;//
commit;

set autocommit=0;
call innodb_insert_proc(10000);
commit;
set autocommit=1;

#--sleep 40
#SELECT NAME, MIN_KEY_VERSION FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0;

--let tables_count=`select count(*) from INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES`

--echo # Wait max 10 min for key encryption threads to encrypt all spaces
--let $wait_timeout= 600
# All tables should get encrypted. $tables_count - because INNODB_TABLESPACES_ENCRYPTION contains artificial innodb_system
# table and t7 is unencrypted
--let $wait_condition=SELECT COUNT(*) = $tables_count FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1
--source include/wait_condition.inc

--let $assert_text= Make sure t7 is not encrypted
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 and name=\\'test/t7\\']" = 1
--source include/assert.inc

--echo # tablespaces should be now encrypted
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=foobar
--let SEARCH_FILE=$t1_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=temp
--let SEARCH_FILE=$t2_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barfoo
--let SEARCH_FILE=$t3_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=secret
--let SEARCH_FILE=$t4_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=fbar
--let SEARCH_FILE=$t5_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barf
--let SEARCH_FILE=$t6_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=barb
--let SEARCH_FILE=$t7_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=baba
--let SEARCH_FILE=$t8_IBD
--source include/search_pattern_in_file.inc


--list_files $MYSQLD_DATADIR/test
FLUSH TABLES t1, t2, t3, t4, t5, t6, t7, t8 FOR EXPORT;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_backup_tablespaces("test", "t1","t2","t3", "t4", "t5", "t6", "t7", "t8");
EOF
--list_files $MYSQLD_DATADIR/test
UNLOCK TABLES;

ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t7 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_discard_tablespaces("test", "t1","t2","t3","t4","t5","t6","t7","t8");
ib_restore_tablespaces("test", "t1","t2","t3","t4","t5","t6","t7","t8");
EOF

ALTER TABLE t1 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t1;
ALTER TABLE t2 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t2;
ALTER TABLE t3 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t3;
ALTER TABLE t4 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t4;
ALTER TABLE t5 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t5;
ALTER TABLE t6 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t6;
ALTER TABLE t7 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t7;
ALTER TABLE t8 IMPORT TABLESPACE;
SELECT COUNT(1) FROM t8;

--echo # tablespaces should remain encrypted after import, apart from t7
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=foobar
--let SEARCH_FILE=$t1_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=temp
--let SEARCH_FILE=$t2_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barfoo
--let SEARCH_FILE=$t3_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=secret
--let SEARCH_FILE=$t4_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=fbar
--let SEARCH_FILE=$t5_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barf
--let SEARCH_FILE=$t6_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=barb
--let SEARCH_FILE=$t7_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=baba
--let SEARCH_FILE=$t8_IBD
--source include/search_pattern_in_file.inc


ALTER TABLE t1 ENGINE InnoDB;
SHOW CREATE TABLE t1;
ALTER TABLE t2 ENGINE InnoDB;
SHOW CREATE TABLE t2;
ALTER TABLE t3 ENGINE InnoDB;
SHOW CREATE TABLE t3;
ALTER TABLE t4 ENGINE InnoDB;
SHOW CREATE TABLE t4;
ALTER TABLE t5 ENGINE InnoDB;
SHOW CREATE TABLE t5;
ALTER TABLE t6 ENGINE InnoDB;
SHOW CREATE TABLE t6;
ALTER TABLE t7 ENGINE InnoDB;
SHOW CREATE TABLE t7;
ALTER TABLE t8 ENGINE InnoDB;
SHOW CREATE TABLE t8;

--echo # Restarting server
-- source include/restart_mysqld.inc
--echo # Done restarting server

--echo # Verify that tables are still usable
SELECT COUNT(1) FROM t1;
SELECT COUNT(1) FROM t2;
SELECT COUNT(1) FROM t3;
SELECT COUNT(1) FROM t4;
SELECT COUNT(1) FROM t5;
SELECT COUNT(1) FROM t6;
SELECT COUNT(1) FROM t7;
SELECT COUNT(1) FROM t8;

--echo # Tablespaces should be encrypted after restart
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=foobar
--let SEARCH_FILE=$t1_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=temp
--let SEARCH_FILE=$t2_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barfoo
--let SEARCH_FILE=$t3_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=secret
--let SEARCH_FILE=$t4_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=fbar
--let SEARCH_FILE=$t5_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barf
--let SEARCH_FILE=$t6_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=barb
--let SEARCH_FILE=$t7_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=baba
--let SEARCH_FILE=$t8_IBD
--source include/search_pattern_in_file.inc


--let $assert_text= Make sure all tables, apart from t2, are encrypted
--let $assert_cond= "[SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0]" = 1
--source include/assert.inc

--list_files $MYSQLD_DATADIR/test
FLUSH TABLES t1, t2, t3, t4, t5, t6, t7, t8 FOR EXPORT;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_backup_tablespaces("test", "t1","t2","t3", "t4", "t5", "t6", "t7", "t8");
EOF
--list_files $MYSQLD_DATADIR/test
UNLOCK TABLES;

ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t7 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_discard_tablespaces("test", "t1","t2","t3","t4","t5","t6","t7","t8");
ib_restore_tablespaces("test", "t1","t2","t3","t4","t5","t6","t7","t8");
EOF

--echo # Disable rotation threads
SET GLOBAL innodb_encryption_threads = 0;
SET GLOBAL innodb_encrypt_tables = off;

ALTER TABLE t1 IMPORT TABLESPACE;
--let $assert_text= Make sure t1 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t1\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t1 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t1\\']" = 1
--source include/assert.inc
SELECT COUNT(1) FROM t1;
ALTER TABLE t2 IMPORT TABLESPACE;
--let $assert_text= Make sure t2 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t2\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t2 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t2\\']" = 1
--source include/assert.inc
SELECT COUNT(1) FROM t2;
ALTER TABLE t3 IMPORT TABLESPACE;
--let $assert_text= Make sure t3 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t3\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t3 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t3\\']" = 1
SELECT COUNT(1) FROM t3;
ALTER TABLE t4 IMPORT TABLESPACE;
--let $assert_text= Make sure t4 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t4\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t4 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t4\\']" = 1
SELECT COUNT(1) FROM t4;
ALTER TABLE t5 IMPORT TABLESPACE;
--let $assert_text= Make sure t5 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t5\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t5 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t5\\']" = 1
SELECT COUNT(1) FROM t5;
ALTER TABLE t6 IMPORT TABLESPACE;
--let $assert_text= Make sure t6 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t6\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t6 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t6\\']" = 1
ALTER TABLE t7 IMPORT TABLESPACE;
--let $assert_text= Make sure t7 does not have encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t7\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t7 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0 (i.e. unencrypted)
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t7\\']" = 1
SELECT COUNT(1) FROM t7;
ALTER TABLE t8 IMPORT TABLESPACE;
--let $assert_text= Make sure t8 has encrypted flag set after importing
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t8\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t8 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t8\\']" = 1
SELECT COUNT(1) FROM t8;

--echo # tablespaces should be encrypted, apart from t7
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=foobar
--let SEARCH_FILE=$t1_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=temp
--let SEARCH_FILE=$t2_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barfoo
--let SEARCH_FILE=$t3_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=secret
--let SEARCH_FILE=$t4_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=fbar
--let SEARCH_FILE=$t5_IBD
--source include/search_pattern_in_file.inc
--let SEARCH_PATTERN=barf
--let SEARCH_FILE=$t6_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=barb
--let SEARCH_FILE=$t7_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=baba
--let SEARCH_FILE=$t8_IBD
--source include/search_pattern_in_file.inc

SET GLOBAL innodb_encryption_threads = 4;

--echo # Wait max 10 min for key encryption threads to decrypt all spaces, apart from t1, t3 and t5
--let $wait_timeout= 600
--let $wait_condition=SELECT COUNT(*) = 3 FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION <> 0
--source include/wait_condition.inc

--let $assert_text= Make sure t1 has encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t1\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t1 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t1\\']" = 1
--source include/assert.inc
SELECT COUNT(1) FROM t1;
--let $assert_text= Make sure t2 does not have encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t2\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t2 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t2\\']" = 1
--source include/assert.inc
SELECT COUNT(1) FROM t2;
--let $assert_text= Make sure t3 has encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t3\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t3 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t3\\']" = 1
SELECT COUNT(1) FROM t3;
--let $assert_text= Make sure t4 does not have encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t4\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t4 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t4\\']" = 1
SELECT COUNT(1) FROM t4;
--let $assert_text= Make sure t5 has encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t5\\']" = 8192
--source include/assert.inc
--let $assert_text= Make sure t5 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1 AND NAME=\\'test/t5\\']" = 1
SELECT COUNT(1) FROM t5;
--let $assert_text= Make sure t6 does not have encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t6\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t6 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t6\\']" = 1
SELECT COUNT(1) FROM t6;
--let $assert_text= Make sure t7 does not have encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t7\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t7 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0 (i.e. unencrypted)
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t7\\']" = 1
SELECT COUNT(1) FROM t7;
--let $assert_text= Make sure t8 does not have encrypted flag set
--let $assert_cond= "[SELECT FLAG & 8192 FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES WHERE NAME=\\'test/t8\\']" = 0
--source include/assert.inc
--let $assert_text= Make sure t8 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0
--let $assert_cond= "[SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 0 AND NAME=\\'test/t8\\']" = 1
SELECT COUNT(1) FROM t8;

SELECT * FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION;
SELECT * FROM INFORMATION_SCHEMA.INNODB_SYS_TABLESPACES;

--echo # tablespaces should not be encrypted, apart from t1,t3 and t5
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=foobar
--let SEARCH_FILE=$t1_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=temp
--let SEARCH_FILE=$t2_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=barfoo
--let SEARCH_FILE=$t3_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=secret
--let SEARCH_FILE=$t4_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=FOUND
--let SEARCH_PATTERN=fbar
--let SEARCH_FILE=$t5_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=barb
# t6 is not encrypted, but unreadable as it is compressed
--let SEARCH_FILE=$t7_IBD
--source include/search_pattern_in_file.inc
--let ABORT_ON=NOT_FOUND
--let SEARCH_PATTERN=baba
--let SEARCH_FILE=$t8_IBD
--source include/search_pattern_in_file.inc

--echo # Now let's backup keyring file, change encryption key id of encrypt-able tables (all but t7) 
--echo # export and dicard them. Next restart the server with backuped keyring file and make sure that
--echo # server starts, but tables cannot be imported gracefully

SET GLOBAL innodb_encrypt_tables = on;

--echo # Wait max 10 min for key encryption threads to encrypt all spaces
--let $wait_timeout= 600
# All tables should get encrypted. $tables_count - because INNODB_TABLESPACES_ENCRYPTION contains artificial innodb_system
# table and t7 is unencrypted
--let $wait_condition=SELECT COUNT(*) = $tables_count FROM INFORMATION_SCHEMA.INNODB_TABLESPACES_ENCRYPTION WHERE MIN_KEY_VERSION = 1
--source include/wait_condition.inc

--copy_file $MYSQLTEST_VARDIR/tmp/mysecret_keyring $MYSQLTEST_VARDIR/tmp/mysecret_keyring_backup

ALTER TABLE t1 encryption_key_id=5;
ALTER TABLE t2 encryption_key_id=5;
ALTER TABLE t3 encryption_key_id=5;
ALTER TABLE t4 encryption_key_id=5;
ALTER TABLE t5 encryption_key_id=5;
ALTER TABLE t6 encryption_key_id=5;
ALTER TABLE t8 encryption_key_id=5;

--list_files $MYSQLD_DATADIR/test
FLUSH TABLES t1, t2, t3, t4, t5, t6, t8 FOR EXPORT;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_backup_tablespaces("test", "t1","t2","t3", "t4", "t5", "t6", "t8");
EOF
--list_files $MYSQLD_DATADIR/test
UNLOCK TABLES;

ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;

perl;
do "$ENV{MYSQL_TEST_DIR}/include/innodb-util.inc";
ib_discard_tablespaces("test", "t1","t2","t3","t4","t5","t6","t8");
ib_restore_tablespaces("test", "t1","t2","t3","t4","t5","t6","t8");
EOF

--let $restart_parameters=restart:--loose-keyring_file_data=$MYSQL_TMP_DIR/mysecret_keyring_backup
--source include/restart_mysqld.inc

--error ER_GET_ERRMSG
ALTER TABLE t1 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t2 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t3 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t4 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t5 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t6 IMPORT TABLESPACE;
--error ER_GET_ERRMSG
ALTER TABLE t8 IMPORT TABLESPACE;

--let $restart_parameters=restart:--loose-keyring_file_data=$MYSQL_TMP_DIR/mysecret_keyring
--source include/restart_mysqld.inc

DROP PROCEDURE innodb_insert_proc;
DROP TABLE t1, t2, t3, t4, t5, t6, t7, t8;
