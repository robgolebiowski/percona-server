call mtr.add_suppression("\\[Warning\\] InnoDB: Tablespace for table `[^`]+`.`[^`]+` is set as discarded\\.");
call mtr.add_suppression("\\[Warning\\] InnoDB: Page [0-9]+ at offet [0-9]+ in file .* cannot be decrypted.");
call mtr.add_suppression("\\[ERROR\\] InnoDB: os_file_read\\(\\) failed");
CREATE TABLE t1 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ENCRYPTION='KEYRING';
CREATE TABLE t2 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ENCRYPTION='Y';
CREATE TABLE t3 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB COMPRESSION="zlib" ENCRYPTION='KEYRING';
CREATE TABLE t4 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB COMPRESSION="zlib";
CREATE TABLE t5 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ROW_FORMAT=COMPRESSED ENCRYPTION='KEYRING';
CREATE TABLE t6 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;
CREATE TABLE t7 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB ENCRYPTION='N';
CREATE TABLE t8 (id INT NOT NULL PRIMARY KEY, a VARCHAR(255)) ENGINE=InnoDB;
CREATE PROCEDURE innodb_insert_proc(repeat_count INT)
BEGIN
DECLARE current_num INT;
SET current_num = 0;
WHILE current_num < repeat_count DO
INSERT INTO t1 VALUES (current_num, REPEAT('foobar', 42));
INSERT INTO t2 VALUES (current_num, REPEAT('temp'  , 42));
INSERT INTO t3 VALUES (current_num, REPEAT('barfoo', 42));
INSERT INTO t4 VALUES (current_num, REPEAT('secret', 42));
INSERT INTO t5 VALUES (current_num, REPEAT('fbar'  , 42));
INSERT INTO t6 VALUES (current_num, REPEAT('barf'  , 42));
INSERT INTO t7 VALUES (current_num, REPEAT('barb'  , 42));
INSERT INTO t8 VALUES (current_num, REPEAT('baba'  , 42));
SET current_num = current_num + 1;
END WHILE;
END//
COMMIT;
SET autocommit = 0;
CALL innodb_insert_proc(10000);
COMMIT;
SET autocommit = 1;
# Wait max 2 min for key encryption threads to encrypt all spaces
include/assert.inc [Make sure t7 is not encrypted]
# tablespaces should be now encrypted
t1.frm
t1.ibd
t2.frm
t2.ibd
t3.frm
t3.ibd
t4.frm
t4.ibd
t5.frm
t5.ibd
t6.frm
t6.ibd
t7.frm
t7.ibd
t8.frm
t8.ibd
FLUSH TABLES t1, t2, t3, t4, t5, t6, t7, t8 FOR EXPORT;
backup: t1
backup: t2
backup: t3
backup: t4
backup: t5
backup: t6
backup: t7
backup: t8
t1.cfg
t1.frm
t1.ibd
t2.cfg
t2.frm
t2.ibd
t3.cfg
t3.frm
t3.ibd
t4.cfg
t4.frm
t4.ibd
t5.cfg
t5.frm
t5.ibd
t6.cfg
t6.frm
t6.ibd
t7.cfg
t7.frm
t7.ibd
t8.cfg
t8.frm
t8.ibd
UNLOCK TABLES;
ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t7 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;
restore: t1 .ibd and .cfg files
restore: t2 .ibd and .cfg files
restore: t3 .ibd and .cfg files
restore: t4 .ibd and .cfg files
restore: t5 .ibd and .cfg files
restore: t6 .ibd and .cfg files
restore: t7 .ibd and .cfg files
restore: t8 .ibd and .cfg files
ALTER TABLE t1 IMPORT TABLESPACE;
include/assert.inc [Make sure t1 is readable]
ALTER TABLE t2 IMPORT TABLESPACE;
include/assert.inc [Make sure t2 is readable]
ALTER TABLE t3 IMPORT TABLESPACE;
include/assert.inc [Make sure t3 is readable]
ALTER TABLE t4 IMPORT TABLESPACE;
include/assert.inc [Make sure t4 is readable]
ALTER TABLE t5 IMPORT TABLESPACE;
include/assert.inc [Make sure t5 is readable]
ALTER TABLE t6 IMPORT TABLESPACE;
include/assert.inc [Make sure t6 is readable]
ALTER TABLE t7 IMPORT TABLESPACE;
include/assert.inc [Make sure t7 is readable]
ALTER TABLE t8 IMPORT TABLESPACE;
include/assert.inc [Make sure t8 is readable]
# tablespaces should remain encrypted after import, apart from t7
ALTER TABLE t1 ENGINE InnoDB;
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ENCRYPTION='KEYRING' ENCRYPTION_KEY_ID=0
ALTER TABLE t2 ENGINE InnoDB;
SHOW CREATE TABLE t2;
Table	Create Table
t2	CREATE TABLE `t2` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ENCRYPTION='Y'
ALTER TABLE t3 ENGINE InnoDB;
SHOW CREATE TABLE t3;
Table	Create Table
t3	CREATE TABLE `t3` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMPRESSION='zlib' ENCRYPTION='KEYRING' ENCRYPTION_KEY_ID=0
ALTER TABLE t4 ENGINE InnoDB;
SHOW CREATE TABLE t4;
Table	Create Table
t4	CREATE TABLE `t4` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMPRESSION='zlib' ENCRYPTION_KEY_ID=0
ALTER TABLE t5 ENGINE InnoDB;
SHOW CREATE TABLE t5;
Table	Create Table
t5	CREATE TABLE `t5` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED ENCRYPTION='KEYRING' ENCRYPTION_KEY_ID=0
ALTER TABLE t6 ENGINE InnoDB;
SHOW CREATE TABLE t6;
Table	Create Table
t6	CREATE TABLE `t6` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPRESSED ENCRYPTION_KEY_ID=0
ALTER TABLE t7 ENGINE InnoDB;
SHOW CREATE TABLE t7;
Table	Create Table
t7	CREATE TABLE `t7` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ENCRYPTION='N'
ALTER TABLE t8 ENGINE InnoDB;
SHOW CREATE TABLE t8;
Table	Create Table
t8	CREATE TABLE `t8` (
  `id` int(11) NOT NULL,
  `a` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ENCRYPTION_KEY_ID=0
# Restarting server
# restart
# Done restarting server
# Verify that tables are still usable
include/assert.inc [Make sure t1 is readable]
include/assert.inc [Make sure t2 is readable]
include/assert.inc [Make sure t3 is readable]
include/assert.inc [Make sure t4 is readable]
include/assert.inc [Make sure t5 is readable]
include/assert.inc [Make sure t6 is readable]
include/assert.inc [Make sure t7 is readable]
include/assert.inc [Make sure t8 is readable]
# Tablespaces should be encrypted after restart
include/assert.inc [Make sure all tables, apart from t7, are encrypted]
t1.cfg
t1.frm
t1.ibd
t2.cfg
t2.frm
t2.ibd
t3.cfg
t3.frm
t3.ibd
t4.cfg
t4.frm
t4.ibd
t5.cfg
t5.frm
t5.ibd
t6.cfg
t6.frm
t6.ibd
t7.cfg
t7.frm
t7.ibd
t8.cfg
t8.frm
t8.ibd
FLUSH TABLES t1, t2, t3, t4, t5, t6, t7, t8 FOR EXPORT;
backup: t1
backup: t2
backup: t3
backup: t4
backup: t5
backup: t6
backup: t7
backup: t8
t1.cfg
t1.frm
t1.ibd
t2.cfg
t2.frm
t2.ibd
t3.cfg
t3.frm
t3.ibd
t4.cfg
t4.frm
t4.ibd
t5.cfg
t5.frm
t5.ibd
t6.cfg
t6.frm
t6.ibd
t7.cfg
t7.frm
t7.ibd
t8.cfg
t8.frm
t8.ibd
UNLOCK TABLES;
ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t7 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;
restore: t1 .ibd and .cfg files
restore: t2 .ibd and .cfg files
restore: t3 .ibd and .cfg files
restore: t4 .ibd and .cfg files
restore: t5 .ibd and .cfg files
restore: t6 .ibd and .cfg files
restore: t7 .ibd and .cfg files
restore: t8 .ibd and .cfg files
# Disable rotation threads
SET GLOBAL innodb_encryption_threads = 0;
SET GLOBAL innodb_encrypt_tables = ONLINE_FROM_KEYRING_TO_UNENCRYPTED;
ALTER TABLE t1 IMPORT TABLESPACE;
include/assert.inc [Make sure t1 has encrypted flag set after importing]
include/assert.inc [Make sure t1 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t1 is readable]
ALTER TABLE t2 IMPORT TABLESPACE;
include/assert.inc [Make sure t2 has encrypted flag set after importing]
include/assert.inc [Make sure t2 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t2 is readable]
ALTER TABLE t3 IMPORT TABLESPACE;
include/assert.inc [Make sure t3 has encrypted flag set after importing]
include/assert.inc [Make sure t3 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t3 is readable]
ALTER TABLE t4 IMPORT TABLESPACE;
include/assert.inc [Make sure t4 has encrypted flag set after importing]
include/assert.inc [Make sure t4 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t4 is readable]
ALTER TABLE t5 IMPORT TABLESPACE;
include/assert.inc [Make sure t5 has encrypted flag set after importing]
include/assert.inc [Make sure t5 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t5 is readable]
ALTER TABLE t6 IMPORT TABLESPACE;
include/assert.inc [Make sure t6 has encrypted flag set after importing]
include/assert.inc [Make sure t6 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t6 is readable]
ALTER TABLE t7 IMPORT TABLESPACE;
include/assert.inc [Make sure t7 does not have encrypted flag set after importing]
include/assert.inc [Make sure t7 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0 (i.e. unencrypted)]
include/assert.inc [Make sure t7 is readable]
ALTER TABLE t8 IMPORT TABLESPACE;
include/assert.inc [Make sure t8 has encrypted flag set after importing]
include/assert.inc [Make sure t8 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t8 is readable]
# tablespaces should be encrypted, apart from t7
SET GLOBAL innodb_encryption_threads = 4;
# Wait max 2 min for key encryption threads to decrypt all spaces, apart from t1, t3 and t5
include/assert.inc [Make sure t1 has encrypted flag set]
include/assert.inc [Make sure t1 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t1 is readable]
include/assert.inc [Make sure t2 does not have encrypted flag set]
include/assert.inc [Make sure t2 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0]
include/assert.inc [Make sure t2 is readable]
include/assert.inc [Make sure t3 has encrypted flag set]
include/assert.inc [Make sure t3 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t3 is readable]
include/assert.inc [Make sure t4 does not have encrypted flag set]
include/assert.inc [Make sure t4 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0]
include/assert.inc [Make sure t4 is readable]
include/assert.inc [Make sure t5 has encrypted flag set]
include/assert.inc [Make sure t5 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 1]
include/assert.inc [Make sure t5 is readable]
include/assert.inc [Make sure t6 does not have encrypted flag set]
include/assert.inc [Make sure t6 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0]
include/assert.inc [Make sure t6 is readable]
include/assert.inc [Make sure t7 does not have encrypted flag set]
include/assert.inc [Make sure t7 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0 (i.e. unencrypted)]
include/assert.inc [Make sure t7 is readable]
include/assert.inc [Make sure t8 does not have encrypted flag set]
include/assert.inc [Make sure t8 is visible in INNODB_SYS_TABLESPACES with MIN_KEY_VERSION = 0]
include/assert.inc [Make sure t8 is readable]
# tablespaces should not be encrypted, apart from t1,t3 and t5
# Now let's backup keyring file, change encryption key id of encrypt-able tables (all but t7)
# export and dicard them. Next restart the server with backuped keyring file and make sure that
# server starts, but tables cannot be imported gracefully
SET GLOBAL innodb_encrypt_tables = ONLINE_TO_KEYRING;
# Wait max 2 min for key encryption threads to encrypt all spaces
ALTER TABLE t1 encryption_key_id = 5;
# This should generate error that tables that was originaly encrypted with Master Key need
# to have encryption type set to KEYRING so encryption_key_id could be used in ALTER statement
ALTER TABLE t2 encryption_key_id = 5;
ERROR HY000: InnoDB: ENCRYPTION_KEY_ID cannot be assigned to tables that were originaly created with Master Key encryption. If you want to assign ENCRYPTION_KEY_ID to this table change its encryption type explicitly to 'KEYRING'
ALTER TABLE t2 ENCRYPTION='KEYRING' encryption_key_id = 5;
ALTER TABLE t3 encryption_key_id = 5;
ALTER TABLE t4 encryption_key_id = 5;
ALTER TABLE t5 encryption_key_id = 5;
ALTER TABLE t6 encryption_key_id = 5;
ALTER TABLE t8 encryption_key_id = 5;
t1.cfg
t1.frm
t1.ibd
t2.cfg
t2.frm
t2.ibd
t3.cfg
t3.frm
t3.ibd
t4.cfg
t4.frm
t4.ibd
t5.cfg
t5.frm
t5.ibd
t6.cfg
t6.frm
t6.ibd
t7.cfg
t7.frm
t7.ibd
t8.cfg
t8.frm
t8.ibd
FLUSH TABLES t1, t2, t3, t4, t5, t6, t8 FOR EXPORT;
backup: t1
backup: t2
backup: t3
backup: t4
backup: t5
backup: t6
backup: t8
t1.cfg
t1.frm
t1.ibd
t2.cfg
t2.frm
t2.ibd
t3.cfg
t3.frm
t3.ibd
t4.cfg
t4.frm
t4.ibd
t5.cfg
t5.frm
t5.ibd
t6.cfg
t6.frm
t6.ibd
t7.cfg
t7.frm
t7.ibd
t8.cfg
t8.frm
t8.ibd
UNLOCK TABLES;
ALTER TABLE t1 DISCARD TABLESPACE;
ALTER TABLE t2 DISCARD TABLESPACE;
ALTER TABLE t3 DISCARD TABLESPACE;
ALTER TABLE t4 DISCARD TABLESPACE;
ALTER TABLE t5 DISCARD TABLESPACE;
ALTER TABLE t6 DISCARD TABLESPACE;
ALTER TABLE t8 DISCARD TABLESPACE;
restore: t1 .ibd and .cfg files
restore: t2 .ibd and .cfg files
restore: t3 .ibd and .cfg files
restore: t4 .ibd and .cfg files
restore: t5 .ibd and .cfg files
restore: t6 .ibd and .cfg files
restore: t8 .ibd and .cfg files
# restart:--loose-keyring_file_data=MYSQL_TMP_DIR/mysecret_keyring_backup
ALTER TABLE t1 IMPORT TABLESPACE;
ERROR HY000: Got error 500 'Table encrypted but decryption failed. This could be because correct encryption management plugin is not loaded, used encryption key is not available or encryption method does not match.' from InnoDB
ALTER TABLE t2 IMPORT TABLESPACE;
ERROR HY000: Got error 500 'Table encrypted but decryption failed. This could be because correct encryption management plugin is not loaded, used encryption key is not available or encryption method does not match.' from InnoDB
ALTER TABLE t3 IMPORT TABLESPACE;
ERROR HY000: Internal error: The table `test`.`t3` is encrypted and compressed. Either decryption or decompression failed. Please make sure that correct keyring is used and that keyring contains key that was used to encrypt the table.
ALTER TABLE t4 IMPORT TABLESPACE;
ERROR HY000: Internal error: The table `test`.`t4` is encrypted and compressed. Either decryption or decompression failed. Please make sure that correct keyring is used and that keyring contains key that was used to encrypt the table.
ALTER TABLE t5 IMPORT TABLESPACE;
ERROR HY000: Got error 500 'Table encrypted but decryption failed. This could be because correct encryption management plugin is not loaded, used encryption key is not available or encryption method does not match.' from InnoDB
ALTER TABLE t6 IMPORT TABLESPACE;
ERROR HY000: Got error 500 'Table encrypted but decryption failed. This could be because correct encryption management plugin is not loaded, used encryption key is not available or encryption method does not match.' from InnoDB
ALTER TABLE t8 IMPORT TABLESPACE;
ERROR HY000: Got error 500 'Table encrypted but decryption failed. This could be because correct encryption management plugin is not loaded, used encryption key is not available or encryption method does not match.' from InnoDB
# restart:--loose-keyring_file_data=MYSQL_TMP_DIR/mysecret_keyring
DROP PROCEDURE innodb_insert_proc;
DROP TABLE t1, t2, t3, t4, t5, t6, t7, t8;
