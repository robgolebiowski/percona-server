# Currently binlog is disabled. After initializing check_consecutive_binlog_key_versions we will restart the
# server with binlog enabled. check_consecutive_binlog_key_versions will make sure that a new version of
# percona_binlog key is used after each rotate_system_key followed by FLUSH LOGS calls.
SET SESSION debug="+d,check_consecutive_binlog_key_versions";
# restart:--log-bin=master-bin
# master-bin.000002
SELECT 1;
1
1
SELECT 2;
2
2
include/assert.inc [Successfull rotation of percona_binlog]
FLUSH LOGS;
# master-bin.000003
SELECT 3;
3
3
SELECT 4;
4
4
include/assert.inc [Successfull rotation of percona_binlog]
FLUSH LOGS;
# master-bin.000004
FLUSH LOGS;
SELECT 5;
5
5
SELECT 6;
6
6
FLUSH LOGS;
# master-bin.000005
SET SESSION debug="-d,check_consecutive_binlog_key_versions";
# restart:--log-bin=master-bin --encrypt-binlog=0
#master-bin.000006
SELECT 7;
7
7
SELECT 8;
8
8
FLUSH LOGS;
#master-bin.000007
# Check that only percona_binlog key can be rotated with rotate_system_key. This part of the test needs updating
# each time a new system key is added.
include/assert.inc [It should not be possible to rotate key percona_binlog:]
include/assert.inc [It should not be possible to rotate key percona_key]
include/assert.inc [It should not be possible to rotate key percona_123]
include/assert.inc [It should not be possible to rotate key percona_bin]
include/assert.inc [It should not be possible to rotate key percona_b]
include/assert.inc [It should not be possible to rotate key percona_]
include/assert.inc [It should not be possible to rotate key percona]
include/assert.inc [It should not be possible to rotate key system_key]
include/assert.inc [It should not be possible to rotate key system_key]
include/assert.inc [It should not be possible to rotate key system_key]
